name: CD-Prod (Demo App)
on:
  push:
    branches:
      - master
jobs:
  skip_cd:
    environment: prod
    env:
      SKIP_CD: ${{ secrets.SKIP_CD }}
    runs-on: ubuntu-latest
    steps:
      - name: Skip CD
        if: ${{ env.SKIP_CD == 'true' }}
        uses: andymckay/cancel-action@0.2
  heroku_deployment:
    needs: skip_cd
    environment: prod
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      SLACK_WEBHOOK: ${{ secrets.MSG_SLACK_WEBHOOK }}
      SLACK_USERNAME: ${{ github.workflow }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['US', 'TW']
        include:
          - region: 'US'
            app_url: 'US_HEROKU_APP_URL'
            app_name: 'US_HEROKU_APP_NAME'
          - region: 'TW'
            app_url: 'TW_HEROKU_APP_URL'
            app_name: 'TW_HEROKU_APP_NAME'
    steps:
      - uses: actions/checkout@v2
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ github.token }}
          target_url: ${{ secrets[matrix.app_url] }}
          environment: prod
      - name: Login to Heroku Container registry
        run: heroku container:login
      - name: Build and push
        run: heroku container:push -a ${{ secrets[matrix.app_name] }} web
      - name: Release
        run: heroku container:release -a ${{ secrets[matrix.app_name] }} web
      - name: Update deployment status (success)
        if: ${{ success() }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          target_url: ${{ secrets[matrix.app_url] }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Release Notification
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_ICON_EMOJI: ":rocket:"
          SLACK_MESSAGE: ${{ github.workflow }} - Success ${{ secrets[matrix.app_url] }}
      - name: Update deployment status (failure)
        if: ${{ failure() }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          target_url: ${{ secrets[matrix.app_url] }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Failure notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_MESSAGE: ${{ github.workflow }} - Failed
          SLACK_COLOR: danger
